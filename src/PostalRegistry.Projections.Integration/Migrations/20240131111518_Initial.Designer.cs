// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PostalRegistry.Projections.Integration;

#nullable disable

namespace PostalRegistry.Projections.Integration.Migrations
{
    [DbContext(typeof(IntegrationContext))]
    [Migration("20240131111518_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Be.Vlaanderen.Basisregisters.ProjectionHandling.Runner.ProjectionStates.ProjectionStateItem", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("DesiredState")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("DesiredStateChangedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("text");

                    b.Property<long>("Position")
                        .HasColumnType("bigint");

                    b.HasKey("Name");

                    b.ToTable("ProjectionStates", "integration_postal");
                });

            modelBuilder.Entity("PostalRegistry.Projections.Integration.PostalInformationName", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("Language")
                        .HasColumnType("integer")
                        .HasColumnName("language");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text")
                        .HasColumnName("postal_code");

                    b.Property<string>("SearchName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("search_name");

                    b.HasKey("Id");

                    b.HasIndex("PostalCode");

                    b.HasIndex("SearchName");

                    b.ToTable("postal_information_name", "integration_postal");
                });

            modelBuilder.Entity("PostalRegistry.Projections.Integration.PostalLatestItem", b =>
                {
                    b.Property<string>("PostalCode")
                        .HasColumnType("text")
                        .HasColumnName("postal_code");

                    b.Property<bool>("IsRetired")
                        .HasColumnType("boolean")
                        .HasColumnName("is_retired");

                    b.Property<string>("Namespace")
                        .HasColumnType("text")
                        .HasColumnName("namespace");

                    b.Property<string>("NisCode")
                        .HasColumnType("text")
                        .HasColumnName("nis_code");

                    b.Property<string>("PuriId")
                        .HasColumnType("text")
                        .HasColumnName("puri_id");

                    b.Property<DateTimeOffset>("VersionTimestampAsDateTimeOffset")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("version_timestamp");

                    b.HasKey("PostalCode");

                    b.HasIndex("NisCode");

                    b.ToTable("postal_latest_items", "integration_postal");
                });

            modelBuilder.Entity("PostalRegistry.Projections.Integration.PostalInformationName", b =>
                {
                    b.HasOne("PostalRegistry.Projections.Integration.PostalLatestItem", null)
                        .WithMany("PostalNames")
                        .HasForeignKey("PostalCode");
                });

            modelBuilder.Entity("PostalRegistry.Projections.Integration.PostalLatestItem", b =>
                {
                    b.Navigation("PostalNames");
                });
#pragma warning restore 612, 618
        }
    }
}
